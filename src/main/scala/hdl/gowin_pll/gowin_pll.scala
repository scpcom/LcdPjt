package hdl
package gowin_pll

import chisel3._
//Copyright (C)2014-2019 Gowin Semiconductor Corporation.
//All rights reserved.
//File Title: IP file
//GOWIN Version: v1.9.2Beta
//Part Number: GW1N-LV1QN48C6/I5
//Created Time: Fri Oct 25 15:23:07 2019

class Gowin_PLL() extends RawModule {

  val clkout = IO(Output(Bool()))
  val clkoutd = IO(Output(Bool()))
  val clkin = IO(Input(Bool()))

  val lock_o = Wire(Bool()) 
  val clkoutp_o = Wire(Bool()) 
  val clkoutd3_o = Wire(Bool()) 
  val gw_gnd = Wire(Bool()) 
  gw_gnd := false.B
  // NOTE: The following statements are auto generated due to the use of concatenation in port-map of instance pll_inst
  //       This default translation is very verbose, you may hence want to refactor it by:
  //          > (TO DO AUTOMATICALLY?) Remove existing wire declaration used in concat {<w1>, <w2>, ...} and rename those wire as <bundleName>.<w1> wherever used.
  //          > Reuse same autogenerated bundle for in and out of extra (use chiselTypeOf())
  val pll_inst_FBDSEL = Wire(new Bundle { 
    val gw_gnd = Bool()
    val gw_gnd_0 = Bool()
    val gw_gnd_1 = Bool()
    val gw_gnd_2 = Bool()
    val gw_gnd_3 = Bool()
    val gw_gnd_4 = Bool()
  }) 
  pll_inst_FBDSEL.gw_gnd := gw_gnd
  pll_inst_FBDSEL.gw_gnd_0 := gw_gnd
  pll_inst_FBDSEL.gw_gnd_1 := gw_gnd
  pll_inst_FBDSEL.gw_gnd_2 := gw_gnd
  pll_inst_FBDSEL.gw_gnd_3 := gw_gnd
  pll_inst_FBDSEL.gw_gnd_4 := gw_gnd
  val pll_inst_IDSEL = Wire(new Bundle { 
    val gw_gnd = Bool()
    val gw_gnd_0 = Bool()
    val gw_gnd_1 = Bool()
    val gw_gnd_2 = Bool()
    val gw_gnd_3 = Bool()
    val gw_gnd_4 = Bool()
  }) 
  pll_inst_IDSEL.gw_gnd := gw_gnd
  pll_inst_IDSEL.gw_gnd_0 := gw_gnd
  pll_inst_IDSEL.gw_gnd_1 := gw_gnd
  pll_inst_IDSEL.gw_gnd_2 := gw_gnd
  pll_inst_IDSEL.gw_gnd_3 := gw_gnd
  pll_inst_IDSEL.gw_gnd_4 := gw_gnd
  val pll_inst_ODSEL = Wire(new Bundle { 
    val gw_gnd = Bool()
    val gw_gnd_0 = Bool()
    val gw_gnd_1 = Bool()
    val gw_gnd_2 = Bool()
    val gw_gnd_3 = Bool()
    val gw_gnd_4 = Bool()
  }) 
  pll_inst_ODSEL.gw_gnd := gw_gnd
  pll_inst_ODSEL.gw_gnd_0 := gw_gnd
  pll_inst_ODSEL.gw_gnd_1 := gw_gnd
  pll_inst_ODSEL.gw_gnd_2 := gw_gnd
  pll_inst_ODSEL.gw_gnd_3 := gw_gnd
  pll_inst_ODSEL.gw_gnd_4 := gw_gnd
  val pll_inst_PSDA = Wire(new Bundle { 
    val gw_gnd = Bool()
    val gw_gnd_0 = Bool()
    val gw_gnd_1 = Bool()
    val gw_gnd_2 = Bool()
  }) 
  pll_inst_PSDA.gw_gnd := gw_gnd
  pll_inst_PSDA.gw_gnd_0 := gw_gnd
  pll_inst_PSDA.gw_gnd_1 := gw_gnd
  pll_inst_PSDA.gw_gnd_2 := gw_gnd
  val pll_inst_DUTYDA = Wire(new Bundle { 
    val gw_gnd = Bool()
    val gw_gnd_0 = Bool()
    val gw_gnd_1 = Bool()
    val gw_gnd_2 = Bool()
  }) 
  pll_inst_DUTYDA.gw_gnd := gw_gnd
  pll_inst_DUTYDA.gw_gnd_0 := gw_gnd
  pll_inst_DUTYDA.gw_gnd_1 := gw_gnd
  pll_inst_DUTYDA.gw_gnd_2 := gw_gnd
  val pll_inst_FDLY = Wire(new Bundle { 
    val gw_gnd = Bool()
    val gw_gnd_0 = Bool()
    val gw_gnd_1 = Bool()
    val gw_gnd_2 = Bool()
  }) 
  pll_inst_FDLY.gw_gnd := gw_gnd
  pll_inst_FDLY.gw_gnd_0 := gw_gnd
  pll_inst_FDLY.gw_gnd_1 := gw_gnd
  pll_inst_FDLY.gw_gnd_2 := gw_gnd

  val pll_inst = Module(new PLL)
  clkout := pll_inst.CLKOUT.asTypeOf(clkout)
  pll_inst.LOCK <> lock_o
  pll_inst.CLKOUTP <> clkoutp_o
  clkoutd := pll_inst.CLKOUTD.asTypeOf(clkoutd)
  pll_inst.CLKOUTD3 <> clkoutd3_o
  pll_inst.RESET := gw_gnd
  pll_inst.RESET_P := gw_gnd
  pll_inst.RESET_I := gw_gnd
  pll_inst.RESET_S := gw_gnd
  pll_inst.CLKIN := clkin
  pll_inst.CLKFB := gw_gnd
  pll_inst.FBDSEL := pll_inst_FBDSEL.asTypeOf(pll_inst.FBDSEL)
  pll_inst.IDSEL := pll_inst_IDSEL.asTypeOf(pll_inst.IDSEL)
  pll_inst.ODSEL := pll_inst_ODSEL.asTypeOf(pll_inst.ODSEL)
  pll_inst.PSDA := pll_inst_PSDA.asTypeOf(pll_inst.PSDA)
  pll_inst.DUTYDA := pll_inst_DUTYDA.asTypeOf(pll_inst.DUTYDA)
  pll_inst.FDLY := pll_inst_FDLY.asTypeOf(pll_inst.FDLY)

} //Gowin_PLL
